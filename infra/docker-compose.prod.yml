version: '3.9'

services:
  proxy:
    image: caddy:2
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - APP_BASE_URL=${APP_BASE_URL}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
    networks:
      - foodbot_net

  web:
    build: ..
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn delivery_bot.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    env_file:
      - ../.env.prod
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - foodbot_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  bot:
    build: ..
    command: python manage.py runbot
    env_file:
      - ../.env.prod
    depends_on:
      - web
    networks:
      - foodbot_net

  celery:
    build: ..
    command: celery -A delivery_bot worker -l info
    env_file:
      - ../.env.prod
    depends_on:
      - redis
      - db
    networks:
      - foodbot_net

  beat:
    build: ..
    command: celery -A delivery_bot beat -l info
    env_file:
      - ../.env.prod
    depends_on:
      - redis
      - db
    networks:
      - foodbot_net

  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - foodbot_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=foodbot
      - POSTGRES_USER=foodbot
      - POSTGRES_PASSWORD=${DB_PASSWORD:?err}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - foodbot_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  foodbot_net:
    name: foodbot_net

volumes:
  db_data:
  static_volume:
  media_volume:
  caddy_data:
  caddy_config:
